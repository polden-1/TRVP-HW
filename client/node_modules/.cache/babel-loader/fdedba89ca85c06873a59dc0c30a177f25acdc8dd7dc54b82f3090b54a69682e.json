{"ast":null,"code":"// ---------- Адрес сервера ----------\n\nconst URL = \"http://localhost:7777\";\n\n// ---------- Запрос на получение всех менеджеров и собеседование ----------\n\nexport const fetchAllData = async setData => {\n  try {\n    const response = await fetch(`${URL}/managers`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при получении данных');\n    }\n    let data = await response.json();\n    data.forEach(manager => {\n      manager.interviews.sort((a, b) => {\n        return a.interview_start_time.localeCompare(b.interview_start_time);\n      });\n    });\n    setData(data);\n  } catch (error) {\n    console.error('Ошибка при первичной загрузке данных:', error.message);\n    alert('Ошибка при первичной загрузке данных: ' + error.message);\n  }\n};\n\n// ---------- Запрос на добавление менеджера ----------\n\nexport const addManager = async data => {\n  try {\n    const response = await fetch(`${URL}/managers/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при добавлении менеджера');\n    }\n    alert('Менеджер успешно добавлен!');\n    return 200;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при добавлении менеджера: ' + error.message);\n  }\n};\n\n// ---------- Запрос на обновление данных о менеджере ----------\n\nexport const updateManager = async (data, id) => {\n  try {\n    const response = await fetch(`${URL}/managers/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при обновлении данных');\n    }\n    alert('Данные успешно обновлены!');\n    return 200;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при обновлении данных: ' + error.message);\n  }\n};\n\n// ---------- Запрос на удаление менеджера ----------\n\nexport const deleteManager = async id => {\n  try {\n    const response = await fetch(`${URL}/managers/delete/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Ошибка при удалении менеджера');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при удалении менеджера: ' + error.message);\n  }\n};\n\n// ---------- Запрос на добавление навыка ----------\n\nexport const addSkill = async data => {\n  try {\n    const response = await fetch(`${URL}/skills/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при добавлении навыка');\n    }\n    alert('Навык успешно добавлен!');\n    return 200;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при добавлении навыка: ' + error.message);\n  }\n};\n\n// ---------- Запрос на добавление собеседования ----------\n\nexport const addInterview = async data => {\n  try {\n    const response = await fetch(`${URL}/interviews/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при добавлении собеседования');\n    }\n    alert('Собеседование успешно добавлено!');\n    return 200;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при добавлении собеседования: ' + error.message);\n  }\n};\n\n// ---------- Запрос на удаление собеседования ----------\n\nexport const deleteInterview = async id => {\n  try {\n    const response = await fetch(`${URL}/interviews/delete/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Ошибка при удалении собеседования');\n    }\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при удалении собеседования: ' + error.message);\n  }\n};\n\n// ---------- Запрос на перенаправление собеседования ----------\n\nexport const moveInterview = async (id, data) => {\n  try {\n    const response = await fetch(`${URL}/interviews/move/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при перенаправлении собеседования');\n    }\n    alert('Собеседование успешно перенаправлено!');\n    return 200;\n  } catch (error) {\n    console.error('Ошибка:', error.message);\n    alert('Ошибка при перенаправлении собеседования: ' + error.message);\n  }\n};\n\n// ---------- Запрос на получение всех навыков ----------\n\nexport const getSkills = async setData => {\n  try {\n    const response = await fetch(`${URL}/skills`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Ошибка при получении навыков');\n    }\n    const data = await response.json();\n    setData(data);\n  } catch (error) {\n    console.error('Ошибка при загрузке навыков:', error.message);\n    alert('Ошибка при загрузке навыков: ' + error.message);\n  }\n};","map":{"version":3,"names":["URL","fetchAllData","setData","response","fetch","method","headers","ok","Error","data","json","forEach","manager","interviews","sort","a","b","interview_start_time","localeCompare","error","console","message","alert","addManager","body","JSON","stringify","updateManager","id","deleteManager","errorData","result","addSkill","addInterview","deleteInterview","moveInterview","getSkills"],"sources":["/Users/nikitakrylov/Desktop/TRVP-011/client/src/requests.js"],"sourcesContent":["// ---------- Адрес сервера ----------\r\n\r\nconst URL = \"http://localhost:7777\";\r\n\r\n// ---------- Запрос на получение всех менеджеров и собеседование ----------\r\n\r\nexport const fetchAllData = async (setData) => {\r\n    try {\r\n      const response = await fetch(`${URL}/managers`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    });\r\n      if (!response.ok) {\r\n        throw new Error('Ошибка при получении данных');\r\n      }\r\n\r\n      let data = await response.json();\r\n\r\n      data.forEach(manager => {\r\n        manager.interviews.sort((a, b) => {\r\n          return a.interview_start_time.localeCompare(b.interview_start_time);\r\n        });\r\n      });\r\n      \r\n      setData(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при первичной загрузке данных:', error.message);\r\n      alert('Ошибка при первичной загрузке данных: ' + error.message);\r\n    }\r\n  };\r\n\r\n// ---------- Запрос на добавление менеджера ----------\r\n\r\nexport const addManager = async (data) => {\r\n  try {\r\n\r\n    const response = await fetch(`${URL}/managers/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при добавлении менеджера');\r\n    }\r\n\r\n    alert('Менеджер успешно добавлен!');\r\n    return 200;\r\n\r\n  } catch (error) {\r\n    console.error('Ошибка:', error.message);\r\n    alert('Ошибка при добавлении менеджера: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на обновление данных о менеджере ----------\r\n\r\nexport const updateManager = async (data, id) => {\r\n  try {\r\n\r\n    const response = await fetch(`${URL}/managers/update/${id}`, {\r\n      method: 'PUT', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при обновлении данных');\r\n    }\r\n\r\n    alert('Данные успешно обновлены!');\r\n    return 200;\r\n\r\n  } catch (error) {\r\n    console.error('Ошибка:', error.message);\r\n    alert('Ошибка при обновлении данных: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление менеджера ----------\r\n\r\nexport const deleteManager = async (id) => {\r\n    try {\r\n        const response = await fetch(`${URL}/managers/delete/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(errorData.error || 'Ошибка при удалении менеджера');\r\n        }\r\n\r\n        const result = await response.json();\r\n        return result; \r\n    } catch (error) {\r\n        console.error('Ошибка:', error.message);\r\n        alert('Ошибка при удалении менеджера: ' + error.message);\r\n    }\r\n};\r\n\r\n// ---------- Запрос на добавление навыка ----------\r\n\r\nexport const addSkill = async (data) => {\r\n  try {\r\n\r\n    const response = await fetch(`${URL}/skills/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при добавлении навыка');\r\n    }\r\n\r\n    alert('Навык успешно добавлен!');\r\n    return 200;\r\n\r\n  } catch (error) {\r\n    console.error('Ошибка:', error.message);\r\n    alert('Ошибка при добавлении навыка: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на добавление собеседования ----------\r\n\r\nexport const addInterview = async (data) => {\r\n  try {\r\n\r\n    const response = await fetch(`${URL}/interviews/add`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при добавлении собеседования');\r\n    }\r\n\r\n    alert('Собеседование успешно добавлено!');\r\n    return 200;\r\n\r\n  } catch (error) {\r\n    console.error('Ошибка:', error.message);\r\n    alert('Ошибка при добавлении собеседования: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на удаление собеседования ----------\r\n\r\nexport const deleteInterview = async (id) => {\r\n  try {\r\n      const response = await fetch(`${URL}/interviews/delete/${id}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n      });\r\n\r\n      if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || 'Ошибка при удалении собеседования');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result; \r\n  } catch (error) {\r\n      console.error('Ошибка:', error.message);\r\n      alert('Ошибка при удалении собеседования: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на перенаправление собеседования ----------\r\n\r\nexport const moveInterview = async (id, data) => {\r\n  try {\r\n\r\n    const response = await fetch(`${URL}/interviews/move/${id}`, {\r\n      method: 'PUT', \r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Ошибка при перенаправлении собеседования');\r\n    }\r\n\r\n    alert('Собеседование успешно перенаправлено!');\r\n    return 200;\r\n\r\n  } catch (error) {\r\n    console.error('Ошибка:', error.message);\r\n    alert('Ошибка при перенаправлении собеседования: ' + error.message);\r\n  }\r\n};\r\n\r\n// ---------- Запрос на получение всех навыков ----------\r\n\r\nexport const getSkills = async (setData) => {\r\n  try {\r\n      const response = await fetch(`${URL}/skills`, {\r\n          method: 'GET',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n      });\r\n\r\n      if (!response.ok) {\r\n          throw new Error('Ошибка при получении навыков');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setData(data)\r\n  } catch (error) {\r\n      console.error('Ошибка при загрузке навыков:', error.message);\r\n      alert('Ошибка при загрузке навыков: ' + error.message);\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}